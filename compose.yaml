services:
  mysql:
    image: mysql:8.0
    container_name: ds-mysql
    volumes:
      - ./storage/mysql:/var/lib/mysql
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT}"
    env_file:
      - .env
    networks:
      - network

  minio:
    hostname: minio
    image: "minio/minio"
    container_name: lake-minio
    ports:
      - "${MINIO_CONSOLE_PORT}:${MINIO_CONSOLE_PORT}"
      - "${MINIO_API_PORT}:${MINIO_API_PORT}"
    command: ["server", "/data", "--console-address", ":${MINIO_CONSOLE_PORT}"]
    volumes:
      - ./storage/minio:/data
    env_file:
      - .env
    networks:
      - network

  mc:
    image: minio/mc
    container_name: mc
    hostname: mc
    env_file:
      - .env
    entrypoint: >
      /bin/sh -c " until (/usr/bin/mc config host add minio
      http://${MINIO_ENDPOINT} ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD}) do echo '...waiting...' && sleep 1;
      done; /usr/bin/mc mb minio/${MINIO_DATALAKE_BUCKET}; /usr/bin/mc policy set public
      minio/${MINIO_DATALAKE_BUCKET}; exit 0; "
    depends_on:
      - minio
    networks:
      - network

networks:
  network:
    driver: bridge
    name: network
    external: true
